{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stefa\\\\Desktop\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport \"./Expenses.css\";\nimport ExpenseItem from \"./ExpenseItems\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expenses(props) {\n  _s();\n\n  const [filteredYear, setFiflteredYear] = useState(\"2020\");\n\n  const filteredChangeHandler = selectedYear => {\n    setFiflteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter(expenses => {\n    return expenses.date.getFullYear().toString() === filteredYear;\n  });\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \" No expenses found. \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 25\n  }, this);\n\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      selected: filteredYear,\n      onChangeFiltered: filteredChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), expensesContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Expenses, \"qSOQMEVtBh/GAYA2YV/cwenaDac=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/Users/stefa/Desktop/01-starting-setup/src/components/Expenses/Expenses.js"],"names":["useState","Card","ExpenseItem","ExpensesFilter","Expenses","props","filteredYear","setFiflteredYear","filteredChangeHandler","selectedYear","filteredExpenses","items","filter","expenses","date","getFullYear","toString","expensesContent","length","map","expense","title","amount","id"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,gBAAP;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACvB,QAAM,CAACC,YAAD,EAAeC,gBAAf,IAAmCP,QAAQ,CAAC,MAAD,CAAjD;;AAEA,QAAMQ,qBAAqB,GAAIC,YAAD,IAAkB;AAC9CF,IAAAA,gBAAgB,CAACE,YAAD,CAAhB;AACD,GAFD;;AAIA,QAAMC,gBAAgB,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAqBC,QAAD,IAAc;AACzD,WAAOA,QAAQ,CAACC,IAAT,CAAcC,WAAd,GAA4BC,QAA5B,OAA2CV,YAAlD;AACD,GAFwB,CAAzB;;AAIA,MAAIW,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AAEA,MAAIP,gBAAgB,CAACQ,MAAjB,GAA0B,CAA9B,EAAiC;AAC/BD,IAAAA,eAAe,GAAGP,gBAAgB,CAACS,GAAjB,CAAsBC,OAAD,iBACrC,QAAC,WAAD;AAEA,MAAA,KAAK,EAAIA,OAAO,CAACC,KAFjB;AAGA,MAAA,MAAM,EAAID,OAAO,CAACE,MAHlB;AAIA,MAAA,IAAI,EAAIF,OAAO,CAACN;AAJhB,OACOM,OAAO,CAACG,EADf;AAAA;AAAA;AAAA;AAAA,YADgB,CAAlB;AAQD;;AAED,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BACE,QAAC,cAAD;AACE,MAAA,QAAQ,EAAEjB,YADZ;AAEE,MAAA,gBAAgB,EAAEE;AAFpB;AAAA;AAAA;AAAA;AAAA,YADF,EAKGS,eALH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAjCQb,Q;;KAAAA,Q;AAmCT,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\nimport ExpenseItem from \"./ExpenseItems\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\n\r\nfunction Expenses(props) {\r\n  const [filteredYear, setFiflteredYear] = useState(\"2020\");\r\n\r\n  const filteredChangeHandler = (selectedYear) => {\r\n    setFiflteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter ((expenses) => {\r\n    return expenses.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  let expensesContent = <p> No expenses found. </p>\r\n\r\n  if (filteredExpenses.length > 0) {\r\n    expensesContent = filteredExpenses.map((expense) => (\r\n      <ExpenseItem\r\n      key = {expense.id}\r\n      title = {expense.title}\r\n      amount = {expense.amount}\r\n      date = {expense.date}\r\n      />\r\n    ))\r\n  }\r\n\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter\r\n        selected={filteredYear}\r\n        onChangeFiltered={filteredChangeHandler}\r\n      />\r\n      {expensesContent}\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n"]},"metadata":{},"sourceType":"module"}